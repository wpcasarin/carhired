version: '3.5'

services:
  api01: &api
    image: 477546184711.dkr.ecr.us-east-1.amazonaws.com/carhired:latest
    environment:
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/carhired?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_REDIS_HOST: redis
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_REGION: us-east-1
    depends_on:
      - db
      - redis


  api02:
    <<: *api
    environment:
      SERVER_PORT: 8081
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/carhired?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_REDIS_HOST: redis
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_REGION: us-east-1

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      NGINX_PORT: 80
    depends_on:
      - api01
      - api02
    ports:
      - "80:80"

  db:
    image: postgres
    hostname: db
    command: 'postgres -c max_connections=200 -c shared_buffers=512MB -c wal_buffers=64MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    environment:
      POSTGRES_DB: carhired
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root

  redis:
    image: redis
    command: redis-server --save "" --appendonly no --maxclients 20000